spring:
  application:
    name: parsing-engine
  cloud:
    nacos:
      discovery:
        username:
        password:
        server-addr: 124.71.21.11
        namespace: public
  web:
    resources:
      static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:./static
  # REDIS数据库配置
  redis:
    # [必须修改] Redis服务器IP, REDIS安装在本机的,使用127.0.0.1
    host: 124.71.21.11
    # [必须修改] 端口号
    port: 6379
    # [可选] 数据库 DB
    database: 6
    # [可选] 访问密码,若你的redis服务器没有设置密码，就不需要用密码去连接
    password: rundoredis
    # [可选] 超时时间
    timeout: 10000
    # [可选] jdbc数据库配置, 项目使用sqlite作为数据库，一般不需要配置
    # mysql数据源
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/rundo_parsing_engine?useUnicode=true&characterEncoding=UTF8&rewriteBatchedStatements=true&serverTimezone=PRC&useSSL=false&allowMultiQueries=true
    username: root
    password: abc123
    druid:
      initialSize: 10                       # 连接池初始化连接数
      maxActive: 200                        # 连接池最大连接数
      minIdle: 5                            # 连接池最小空闲连接数
      maxWait: 60000                        # 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      keepAlive: true                       # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。
      validationQuery: select 1             # 检测连接是否有效sql，要求是查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
      testWhileIdle: true                   # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      testOnBorrow: false                   # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      testOnReturn: false                   # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      poolPreparedStatements: false         # 是否開啟PSCache，並且指定每個連線上PSCache的大小
      timeBetweenEvictionRunsMillis: 60000  # 配置間隔多久才進行一次檢測，檢測需要關閉的空閒連線，單位是毫秒
      minEvictableIdleTimeMillis: 300000    # 配置一個連線在池中最小生存的時間，單位是毫秒
      filters: config,stat,slf4j             # 配置监控统计拦截的filters，监控统计用的filter:sta, 日志用的filter:log4j, 防御sql注入的filter:wall
      filter:
        wall:
          config:
            multi-statement-allow: true
      useGlobalDataSourceStat: true         # 合并多个DruidDataSource的监控数据
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=1000
      #stat-view-servlet.url-pattern: /admin/druid/*

  # rabbitmq 配置
  rabbitmq:
    host: 124.71.21.11
    port: 5672
    username: wvp
    password: wvp12345678
    publisher-returns: true      # 消息发送到交换机确认机制，是否确认回调
    #        publisher-confirm-type: correlated
    template:
      mandatory: true           #不可达消息是否回调,false时会忽略掉spring.rabbitmq.publisher-returns属性的值
    listener:
      simple:
        concurrency: 8            # 指定最小的消费者数量
        max-concurrency: 32       # 指定最大的消费者数量
        acknowledge-mode: manual  # 采用手动应答
        retry:
          enabled: true           # 是否支持重试

server:
  port: 8070

mybatis:
  configuration:
    mapUnderscoreToCamelCase: true

# [可选] 日志配置, 一般不需要改
logging:
  config: classpath:logback-spring.xml

mq:
  enabled: true
  queue-data-list:
    - id: PUBLIC-GS
      routing-key: rundo.public.gs
      queue-name: rundo.public.gs
      exchange-id: PUBLIC
    - id: PUBLIC-SG
      routing-key: rundo.public.sg
      queue-name: rundo.public.sg
      exchange-id: PUBLIC
  exchange-data-list:
    - id: PUBLIC
      name: rundo.public
      type: topic
    - id: GATEWAY
      name: rundo.gateway
      type: topic
    - id: STREAM
      name: rundo.stream
      type: topic

mq-default:
    public:
      queue-id-get: PUBLIC-SG
      queue-id-set: PUBLIC-GS
    exchange:
      public: PUBLIC
      gateway: GATEWAY
      stream: STREAM
